#include <bits/stdc++.h> 
class Node{
    
    public: 
        int val;
        Node *next;

    Node(int val){
        this->val = val;
        this->next = NULL;
    }
};
class Queue {
 
public:
    Queue() {
        // Implement the Constructor
    }

    /*----------------- Public Functions of Queue -----------------*/

    Node *head = NULL;
    Node *tail = NULL;
    int sz = 0;
    bool isEmpty() {
           
           if(sz == 0) return true;
        else return false;
    }

    void enqueue(int data) {
       sz++;
       Node *newNode= new Node(data);

       if(head==NULL)
       {
           head=newNode;
           tail=newNode;
           return;
       }
       else{
           tail->next=newNode;
           tail=newNode;
       }
    }

    int dequeue() {
       
     
        if (isEmpty()) {
            return -1;
        }
      sz--;
       Node *deleteNode= head;
    
      int val=deleteNode->val;  
        if (head == NULL) {
            tail = NULL;
        }

       head=head->next;
       return val;
      
       delete deleteNode;

    }

    int front() {
       if(!isEmpty())
       {
           return head->val;
       }
       else return -1;
    }
};