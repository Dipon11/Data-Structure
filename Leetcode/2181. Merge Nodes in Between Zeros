/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
  
  ListNode* mergeNodes(ListNode* head) {
        
     
        ListNode* dummy = new ListNode(0);  // Dummy node to simplify the process
        ListNode* current = dummy;          // Pointer to build the new list
        int sum = 0;                        // Variable to store the sum between zeros

        while (head != NULL) {
            if (head->val != 0) {
                sum += head->val;           // Add to sum when value is not zero
            } else if (sum != 0) {
                current->next = new ListNode(sum);  // Create a new node with the sum
                current = current->next;    // Move to the next node
                sum = 0;                    // Reset the sum
            }
            head = head->next;              // Move to the next node in the input list
        }

        return dummy->next;  // Return the merged list

       

    }
};