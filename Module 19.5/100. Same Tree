/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
 void preoder(TreeNode* root1,vector<int> & v1)
{
    if(root1==NULL) return ;
  
   
    if(root1->left != NULL &&  root1->right != NULL)
    {
        v1.push_back(root1->val);
        return;
    }

    preoder(root1->left,v1);
    preoder(root1->right,v1);


}
class Solution {
public:
    bool isSameTree(TreeNode* p, TreeNode* q) {
        vector<int>v1,v2;
        preoder(p,v1);
        preoder(q,v2);
        
        while(!v1.empty())
      {
          if(v1 == v2)
          {
            v1.pop_back();
            v2.pop_back();
            return true;
          }
          else return false;
      }

    }
};